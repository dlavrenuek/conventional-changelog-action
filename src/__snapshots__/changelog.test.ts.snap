// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`changelog.ts calculateBump correctly calculates version bump of commits-breaking1.json with bump-custom.json 1`] = `"custom1"`;

exports[`changelog.ts calculateBump correctly calculates version bump of commits-breaking1.json with bump-empty.json 1`] = `""`;

exports[`changelog.ts calculateBump correctly calculates version bump of commits-breaking1.json with bump-semver.json 1`] = `"major"`;

exports[`changelog.ts calculateBump correctly calculates version bump of commits-breaking2.json with bump-custom.json 1`] = `"custom1"`;

exports[`changelog.ts calculateBump correctly calculates version bump of commits-breaking2.json with bump-empty.json 1`] = `""`;

exports[`changelog.ts calculateBump correctly calculates version bump of commits-breaking2.json with bump-semver.json 1`] = `"major"`;

exports[`changelog.ts calculateBump correctly calculates version bump of commits-non-breaking.json with bump-custom.json 1`] = `"custom1"`;

exports[`changelog.ts calculateBump correctly calculates version bump of commits-non-breaking.json with bump-empty.json 1`] = `""`;

exports[`changelog.ts calculateBump correctly calculates version bump of commits-non-breaking.json with bump-semver.json 1`] = `"minor"`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-custom.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-custom.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-custom.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-custom.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-empty.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-empty.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-empty.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-empty.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-semver.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature",
  "bump": "major",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-semver.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature",
  "bump": "major",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-semver.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "major",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking1.json, bump-semver.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "major",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-custom.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature
* test breaking as a type",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-custom.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature
* test breaking as a type",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-custom.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature
* test breaking as a type

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-custom.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature
* test breaking as a type

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-empty.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature
* test breaking as a type",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-empty.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature
* test breaking as a type",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-empty.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature
* test breaking as a type

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-empty.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature
* test breaking as a type

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-semver.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature
* test breaking as a type",
  "bump": "major",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-semver.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "## BREAKING TYPE TITLE
* test another fix
* **test**: test some more feature
* test breaking as a type",
  "bump": "major",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-semver.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature
* test breaking as a type

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "major",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-breaking2.json, bump-semver.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## Breaking changes
* test another fix
* **test**: test some more feature
* test breaking as a type

## New features
* test feature
* test another feature

## Chore
* test some chore",
  "bump": "major",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-custom.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "No changes",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-custom.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "No changes",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-custom.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## New features
* test feature
* test another feature
* **test**: test some more feature

## Bug fixes
* test another fix

## Chore
* **test**: test some chore",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-custom.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## New features
* test feature
* test another feature
* **test**: test some more feature

## Bug fixes
* test another fix

## Chore
* **test**: test some chore",
  "bump": "custom1",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-empty.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "No changes",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-empty.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "No changes",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-empty.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## New features
* test feature
* test another feature
* **test**: test some more feature

## Bug fixes
* test another fix

## Chore
* **test**: test some chore",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-empty.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## New features
* test feature
* test another feature
* **test**: test some more feature

## Bug fixes
* test another fix

## Chore
* **test**: test some chore",
  "bump": "",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-semver.json, type-breaking.json, sortOrder: asc 1`] = `
Object {
  "body": "No changes",
  "bump": "minor",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-semver.json, type-breaking.json, sortOrder: desc 1`] = `
Object {
  "body": "No changes",
  "bump": "minor",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-semver.json, type-multiple.json, sortOrder: asc 1`] = `
Object {
  "body": "## New features
* test feature
* test another feature
* **test**: test some more feature

## Bug fixes
* test another fix

## Chore
* **test**: test some chore",
  "bump": "minor",
}
`;

exports[`changelog.ts generateChangelog correctly generates the changelog with: commits-non-breaking.json, bump-semver.json, type-multiple.json, sortOrder: desc 1`] = `
Object {
  "body": "## New features
* test feature
* test another feature
* **test**: test some more feature

## Bug fixes
* test another fix

## Chore
* **test**: test some chore",
  "bump": "minor",
}
`;

exports[`changelog.ts indexByType correctly indexes commits from commits-breaking1.json 1`] = `
Object {
  "breaking": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "fix!: test another fix",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [
          Object {
            "text": "",
            "title": "BREAKING CHANGE",
          },
        ],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test another fix",
        "type": "fix",
      },
      "refs": "",
    },
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feat(test)!: test some more feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [
          Object {
            "text": "",
            "title": "BREAKING CHANGE",
          },
        ],
        "references": Array [],
        "revert": null,
        "scope": "test",
        "subject": "test some more feature",
        "type": "feat",
      },
      "refs": "",
    },
  ],
  "chore": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "chore: test some chore",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": "",
        "subject": "test some chore",
        "type": "chore",
      },
      "refs": "",
    },
  ],
  "feat": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feat: test feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test feature",
        "type": "feat",
      },
      "refs": "",
    },
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feat: test another feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test another feature",
        "type": "feat",
      },
      "refs": "",
    },
  ],
}
`;

exports[`changelog.ts indexByType correctly indexes commits from commits-breaking2.json 1`] = `
Object {
  "breaking": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "fix!: test another fix",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [
          Object {
            "text": "",
            "title": "BREAKING CHANGE",
          },
        ],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test another fix",
        "type": "fix",
      },
      "refs": "",
    },
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feature(test)!: test some more feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [
          Object {
            "text": "",
            "title": "BREAKING CHANGE",
          },
        ],
        "references": Array [],
        "revert": null,
        "scope": "test",
        "subject": "test some more feature",
        "type": "feature",
      },
      "refs": "",
    },
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "breaking: test breaking as a type",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": "",
        "subject": "test breaking as a type",
        "type": "breaking",
      },
      "refs": "",
    },
  ],
  "chore": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "chore: test some chore",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": "",
        "subject": "test some chore",
        "type": "chore",
      },
      "refs": "",
    },
  ],
  "feat": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feat: test feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test feature",
        "type": "feat",
      },
      "refs": "",
    },
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feat: test another feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test another feature",
        "type": "feat",
      },
      "refs": "",
    },
  ],
}
`;

exports[`changelog.ts indexByType correctly indexes commits from commits-non-breaking.json 1`] = `
Object {
  "chore": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "chore: test some chore",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": "test",
        "subject": "test some chore",
        "type": "chore",
      },
      "refs": "",
    },
  ],
  "feat": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feat: test feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test feature",
        "type": "feat",
      },
      "refs": "",
    },
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feat: test another feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test another feature",
        "type": "feat",
      },
      "refs": "",
    },
  ],
  "feature": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "feature(test): test some more feature",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": "test",
        "subject": "test some more feature",
        "type": "feature",
      },
      "refs": "",
    },
  ],
  "fix": Array [
    Object {
      "author_email": "",
      "author_name": "",
      "body": "",
      "date": "",
      "hash": "",
      "message": "fix: test another fix",
      "parsed": Object {
        "body": null,
        "footer": null,
        "header": "",
        "mentions": Array [],
        "merge": null,
        "notes": Array [],
        "references": Array [],
        "revert": null,
        "scope": null,
        "subject": "test another fix",
        "type": "fix",
      },
      "refs": "",
    },
  ],
}
`;
